%% Player Analysis

%% Start clean
% Clear all variables in the base workspace
clear

% Close all figure windows that may be open
close all;

% Clear the command window (another open is using 'home')
clc

% Start a timer
tic

% Start a dialog box / progress bar to track progress throughout
f = uifigure;
d = uiprogressdlg(f, 'Title', 'Please Wait', 'Message', 'Starting...');

% References for this section:
% web(fullfile(docroot, 'matlab/ref/uiprogressdlg.html'))

%% Import Data
% This imports one file for analysis, but it is possible to automate the
% analysis of multiple files.

% Specify the file to import data from
filename = 'match_data1.csv';

% Specify what rows to import
row_start = 2;
row_end = 20000;

% Update the progress bar
d.Value = 0.33;
d.Message = 'Importing data';
pause(1)

% Call the function importfile() (auto-generated by the import tool)
data = importfile(filename, [row_start, row_end]);

% References for this section:
% web(fullfile(docroot, 'matlab/import_export/select-spreadsheet-data-interactively.html'))

%% Data Management

% Update the progress bar
d.Value = 0.5;
d.Message = 'Formating data';
pause(1)

% Convert the time data from a 'string array' to 'datatime' data type
t = datetime(data.Time, 'InputFormat', 'HH:mm:ss.SS', 'Format', 'HH:mm:ss.SS');

% Optionally, replace the existing data in data.Time with the converted
% data above
data.Time = t;

%% Look at some of the data
% plot(t(1:s),data.AcclY(1:s))
% data.Time(data.AcclY > 8)
% t(data.AcclY > 8)
t_a0 = t(data.AcclY == 0);

%% Calculate vertical velocity

v = zeros(1,1998);
time = NaT(1, 1998, 'Format',  'HH:mm:ss.SS');
for i = 1:1998
    % Update the progress bar
    d.Value = 0.5 + 0.5*i/1998;
    d.Message = 'Integrating...';
    
    % Compute the numerical integration
    v(i) = trapz(data.AcclY(1+i*10:10*i+10));
    times = datetime(data.Time(1+i*10:10*i+10), 'InputFormat', 'HH:mm:ss.SS', 'Format', 'HH:mm:ss.SS');
    
    % Make sure the times that get assigned to velocity contain the
    % matching times where acceleratin is zero
    for j = 1:length(t_a0)
        for k = 1:length(times)
            if t_a0(j) == times(k)
                time(i) = times(k);
            else
                time(i) = times(1);
            end
        end
    end
end

% Display velocities where AcclY is 0
disp('Velocities where AcclY is 0')
for i = 1:length(t_a0)
    disp(v(time == t_a0(i)))
end

%% Visualize the data

figure

subplot(2,1,1)
plot(t,data.AcclY)
ylabel('AcclY')
grid on

subplot(2,1,2)
plot(time,v)
ylabel('v')
xlabel('time')
grid on

% Show the current graph
shg

%%
t1 = t_a0(1)


%% Clean up
% Close the progress dialog
close(d);

% Display script run time
toc